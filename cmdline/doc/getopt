	
	Wed Sep 13 17:50:04 CST 2017

#include <unistd.h>
extern char *optarg;	//选项的参数指针
extern int optind;		//下一次调用getopt时，从optind存储的位置处重新开始检查选项;
extern int opterr;		//当opterr=0时，getopt不向stderr输出错误信息；
extern int optopt;		//当命令行选项字符不包括在optstring中或者选项缺少必要的参数时，该选项存储在optopt中，getopt返回'?';

int getopt(int argc, char *const argv[], const char *optstring);

调用一次，返回一个选项。在命令行选项参数再也检查不到optstring中包含的选项时，返回-1，同时optind存储第一个不包含选项的命令行参数。

选项和参数：

字符串optstring可以是下列元素：
1、单个字符，表示选项；
2、单个字符后接一个冒号：表示该选项后必须跟一个参数。
	参数紧跟在选项后或者以空格隔开，
	该参数的指针赋给optarg；
3、单个字符后跟两个冒号，表示该选项后必须跟一个参数，
	参数必须紧跟在选项后不能以空格隔开，
	该参数的指针赋给optarg(这个特性是GNU的扩张)。

getopt处理以'-'开头的命令行参数，
如optstring="ab:c::d::"，
命令行为:getopt.exe -a -b host -ckeke -d haha
在这个命令行参数中，-a和-h就是选项元素，去掉’-‘，a,b,c就是选项，host是b的参数，keke是c的参数，但haha并不是d的参数，因为它们中间有空格隔开。

还要注意的是，默认情况下，getopt会重新排列命令行参数的顺序，所以到最后所有不包含选项的命令行参数都排到最后。
如：getopt.exe -a ima -b host -ckeke -d haha，到最后命令行参数的顺序是:
-a -b host -ckeke -d ima haha
如果optstring中的字符串以'+'加号开头或者环境变量POSIXLY_CORRE被设置，那么一遇到不包含选项的命令行参数，getopt就会停止，返回-1。




